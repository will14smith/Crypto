namespace Crypto.EllipticCurve
{
    public enum ECCipherSuites : ushort
    {
        TLS_ECDH_ECDSA_WITH_NULL_SHA = 0xC001,
        TLS_ECDH_ECDSA_WITH_RC4_128_SHA = 0xC002,
        TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC003,
        TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA = 0xC004,
        TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA = 0xC005,

        TLS_ECDHE_ECDSA_WITH_NULL_SHA = 0xC006,
        TLS_ECDHE_ECDSA_WITH_RC4_128_SHA = 0xC007,
        TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA = 0xC008,
        TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 0xC009,
        TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 0xC00A,

        TLS_ECDH_RSA_WITH_NULL_SHA = 0xC00B,
        TLS_ECDH_RSA_WITH_RC4_128_SHA = 0xC00C,
        TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA = 0xC00D,
        TLS_ECDH_RSA_WITH_AES_128_CBC_SHA = 0xC00E,
        TLS_ECDH_RSA_WITH_AES_256_CBC_SHA = 0xC00F,

        TLS_ECDHE_RSA_WITH_NULL_SHA = 0xC010,
        TLS_ECDHE_RSA_WITH_RC4_128_SHA = 0xC011,
        TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA = 0xC012,
        TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 0xC013,
        TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 0xC014,

        TLS_ECDH_anon_WITH_NULL_SHA = 0xC015,
        TLS_ECDH_anon_WITH_RC4_128_SHA = 0xC016,
        TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA = 0xC017,
        TLS_ECDH_anon_WITH_AES_128_CBC_SHA = 0xC018,
        TLS_ECDH_anon_WITH_AES_256_CBC_SHA = 0xC019
    }
}